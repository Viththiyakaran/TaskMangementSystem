// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManagementSystem.Data;

#nullable disable

namespace TaskManagementSystem.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Latin1_General_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TaskManagementSystem.Models.TblAlarm", b =>
                {
                    b.Property<string>("AlarmNote")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("alarmNote");

                    b.Property<int>("BusinessId")
                        .HasColumnType("int")
                        .HasColumnName("businessID");

                    b.Property<string>("HardwareInfo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("hardwareInfo");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("InstalledBy")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("installedBy")
                        .IsFixedLength();

                    b.Property<DateTime?>("InstalledDate")
                        .HasColumnType("datetime")
                        .HasColumnName("installedDate");

                    b.ToTable("tblAlarm", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblBarcode", b =>
                {
                    b.Property<string>("Barcode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("barcode");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productID");

                    b.HasKey("Barcode")
                        .HasName("PK__tblBarco__C16E36F925518C17");

                    b.ToTable("tblBarcodes", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblBookkeepingDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("datetime")
                        .HasColumnName("billDate");

                    b.Property<decimal>("Btw21")
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("BTW21");

                    b.Property<decimal>("Btw6")
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("BTW6");

                    b.Property<string>("InvNo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("invNo")
                        .HasDefaultValueSql("('')");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(15,4)");

                    b.Property<string>("TranType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tranType")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("userName");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("tblBookkeepingDetails", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblCallLog", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ticketID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"), 1L, 1);

                    b.Property<DateTime?>("AppointmentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("appointmentDate")
                        .HasDefaultValueSql("('1/1/1900')");

                    b.Property<string>("AppointmentType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("appointmentType")
                        .HasDefaultValueSql("('No Appointment')")
                        .IsFixedLength();

                    b.Property<int?>("AssignedTo")
                        .HasColumnType("int")
                        .HasColumnName("assignedTo");

                    b.Property<int?>("BusinessId")
                        .HasColumnType("int")
                        .HasColumnName("businessID");

                    b.Property<string>("BusinessType")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("businessType")
                        .IsFixedLength();

                    b.Property<string>("CallType")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("callType")
                        .IsFixedLength();

                    b.Property<int?>("ClCustomerId")
                        .HasColumnType("int")
                        .HasColumnName("clCustomerID");

                    b.Property<int?>("ClosedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("closedBy")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("ClosedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("closedDate")
                        .HasDefaultValueSql("('1/1/1900')");

                    b.Property<string>("InitialNote")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("initialNote");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("lastUpdate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("OpenBy")
                        .HasColumnType("int")
                        .HasColumnName("openBy");

                    b.Property<DateTime?>("OpenDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("openDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ServiceType")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("serviceType")
                        .IsFixedLength();

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("('Open')")
                        .IsFixedLength();

                    b.HasKey("TicketId")
                        .HasName("PK__tblCallL__3333C67015502E78");

                    b.ToTable("tblCallLogs", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblCanceledReason", b =>
                {
                    b.Property<DateTime?>("CanceledDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("canceledDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CanceledReasons")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("canceledReasons");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int")
                        .HasColumnName("ticketID");

                    b.ToTable("tblCanceledReasons", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblCctv", b =>
                {
                    b.Property<int>("BusinessId")
                        .HasColumnType("int")
                        .HasColumnName("businessID");

                    b.Property<string>("CctvNote")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("cctvNote");

                    b.Property<string>("HardwareInfo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("hardwareInfo");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("InstalledBy")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("installedBy")
                        .IsFixedLength();

                    b.Property<DateTime?>("InstalledDate")
                        .HasColumnType("datetime")
                        .HasColumnName("installedDate");

                    b.ToTable("tblCCTV", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblCustomerBusiness", b =>
                {
                    b.Property<int>("BusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("businessID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessId"), 1L, 1);

                    b.Property<decimal?>("AccountBalance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("accountBalance")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("amount");

                    b.Property<string>("BusAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("busAddress");

                    b.Property<string>("BusName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("busName");

                    b.Property<string>("BusNote")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("busNote");

                    b.Property<string>("BusTelephone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("busTelephone")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("createdDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerID");

                    b.Property<string>("InActiveReason")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("inActiveReason");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<int?>("NoOfMonths")
                        .HasColumnType("int")
                        .HasColumnName("noOfMonths");

                    b.Property<string>("PaymentFrequent")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("paymentFrequent")
                        .IsFixedLength();

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("paymentMethod")
                        .IsFixedLength();

                    b.Property<string>("Postcode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .IsFixedLength();

                    b.Property<int?>("PropertyNo")
                        .HasColumnType("int")
                        .HasColumnName("propertyNo");

                    b.Property<DateTime?>("ProvidedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("providedDate");

                    b.Property<int?>("Salesperson")
                        .HasColumnType("int")
                        .HasColumnName("salesperson");

                    b.Property<int>("ServiceTypeId")
                        .HasColumnType("int")
                        .HasColumnName("serviceTypeID");

                    b.HasKey("BusinessId")
                        .HasName("PK__tblCusto__3C08D4E20519C6AF");

                    b.HasIndex(new[] { "BusTelephone" }, "idxDuplicateBusinessTelephone")
                        .IsUnique()
                        .HasFilter("([busTelephone]<>'' AND [busTelephone]<>'0')");

                    b.HasIndex(new[] { "PropertyNo", "Postcode" }, "idxDuplicatePostcodeAndPropertyNo")
                        .IsUnique()
                        .HasFilter("([Postcode]<>'' AND [propertyNo]<>(0))");

                    b.ToTable("tblCustomerBusiness", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblCustomerGroup", b =>
                {
                    b.Property<int>("CusGroupId")
                        .HasColumnType("int")
                        .HasColumnName("cusGroupID");

                    b.Property<string>("CusGroupName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("cusGroupName")
                        .IsFixedLength();

                    b.HasKey("CusGroupId", "CusGroupName")
                        .HasName("PK_CustomerGroup");

                    b.ToTable("tblCustomerGroup", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblCustomerInfo", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("createdBy")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createdDate");

                    b.Property<string>("CusEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cusEmail");

                    b.Property<int>("CusGroupId")
                        .HasColumnType("int")
                        .HasColumnName("cusGroupID");

                    b.Property<string>("CusMobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("cusMobile")
                        .IsFixedLength();

                    b.Property<string>("CusName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cusName");

                    b.Property<string>("CusNote")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("cusNote");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isActive")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("CustomerId")
                        .HasName("PK__tblCusto__B611CB9D7F60ED59");

                    b.HasIndex(new[] { "CusEmail" }, "idxDuplicateCustomerEmail")
                        .IsUnique()
                        .HasFilter("([cusEmail]<>'')");

                    b.HasIndex(new[] { "CusMobile" }, "idxDuplicateCustomerMobile")
                        .IsUnique()
                        .HasFilter("([cusMobile]<>'' AND [cusMobile]<>'0')");

                    b.ToTable("tblCustomerInfo", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblDailyTask", b =>
                {
                    b.Property<int>("TaskId")
                        .HasColumnType("int")
                        .HasColumnName("taskID");

                    b.Property<DateTime?>("LastRunDate")
                        .HasColumnType("date")
                        .HasColumnName("lastRunDate");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("taskName");

                    b.HasKey("TaskId")
                        .HasName("PK__tblDaily__DD5D55A202084FDA");

                    b.ToTable("tblDailyTasks", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblDepartment", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("departmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("createdBy")
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("createdDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DepDescription")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("depDescription");

                    b.Property<string>("DepName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("depName");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("modifiedBy")
                        .IsFixedLength();

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modifiedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Vat")
                        .HasColumnType("int")
                        .HasColumnName("VAT");

                    b.HasKey("DepartmentId")
                        .HasName("PK__tblDepar__F9B8344D2A164134");

                    b.ToTable("tblDepartment", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblEstimate", b =>
                {
                    b.Property<int>("EstimateNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("estimateNumber");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstimateNumber"), 1L, 1);

                    b.Property<int?>("BusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("businessID")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ConvertedInvoice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("convertedInvoice")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("InvDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("invDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("InvNote")
                        .HasMaxLength(5000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5000)")
                        .HasColumnName("invNote");

                    b.Property<string>("InvStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("invStatus")
                        .HasDefaultValueSql("('DRAFT')")
                        .IsFixedLength();

                    b.Property<string>("InvoiceBy")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("invoiceBy")
                        .IsFixedLength();

                    b.Property<DateTime?>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("lastModified")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("modifiedBy")
                        .IsFixedLength();

                    b.HasKey("EstimateNumber")
                        .HasName("PK__tblEstim__1D8F310255F4C372");

                    b.ToTable("tblEstimate", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblHoWebLicence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("IssuedBy")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("issuedBy");

                    b.Property<DateTime>("LicEnding")
                        .HasColumnType("date")
                        .HasColumnName("licEnding");

                    b.Property<DateTime>("LicIssued")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("licIssued")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable("tblHO_WebLicence", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblHoWebLoginRequest", b =>
                {
                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("RequestDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable("tblHO_WebLoginRequest", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblInstallation", b =>
                {
                    b.Property<string>("EquipmentsDetails")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("equipmentsDetails");

                    b.Property<DateTime?>("InstallationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("installationDate");

                    b.Property<string>("Installer")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("installer")
                        .IsFixedLength();

                    b.Property<string>("JobRef")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("jobRef")
                        .IsFixedLength();

                    b.Property<int?>("TicketId")
                        .HasColumnType("int")
                        .HasColumnName("ticketID");

                    b.ToTable("tblInstallation", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblInvoice", b =>
                {
                    b.Property<int>("InvoiceNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("invoiceNumber");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceNumber"), 1L, 1);

                    b.Property<int?>("BusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("businessID")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DueDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dueDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("InvDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("invDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("InvNote")
                        .HasMaxLength(5000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5000)")
                        .HasColumnName("invNote");

                    b.Property<string>("InvStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("invStatus")
                        .HasDefaultValueSql("('DRAFT')")
                        .IsFixedLength();

                    b.Property<string>("InvoiceBy")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("invoiceBy")
                        .IsFixedLength();

                    b.Property<bool>("IsStandingOrder")
                        .HasColumnType("bit")
                        .HasColumnName("isStandingOrder");

                    b.Property<DateTime?>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("lastModified")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("modifiedBy")
                        .IsFixedLength();

                    b.Property<int?>("ProformaInvLink")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("proformaInvLink")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("RefundLink")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("refundLink")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("InvoiceNumber")
                        .HasName("PK__tblInvoi__C72749EF7755B73D");

                    b.ToTable("tblInvoice", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblInvoiceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("addedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("InvoiceNumber")
                        .HasColumnType("int")
                        .HasColumnName("invoiceNumber");

                    b.Property<string>("ProName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("proName");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("unitPrice");

                    b.Property<int?>("Vat")
                        .HasColumnType("int")
                        .HasColumnName("VAT");

                    b.HasKey("Id");

                    b.ToTable("tblInvoiceItems", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblLicence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BusinessId")
                        .HasColumnType("int")
                        .HasColumnName("businessID");

                    b.Property<string>("Computer")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("computer");

                    b.Property<string>("IssuedBy")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("issuedBy")
                        .IsFixedLength();

                    b.Property<DateTime>("LicenceExpiryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("licenceExpiryDate");

                    b.Property<DateTime>("LicenceIssuedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("licenceIssuedDate");

                    b.Property<string>("LicenceKey")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("licenceKey");

                    b.Property<string>("TillName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("tillName")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("tblLicence", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblLight", b =>
                {
                    b.Property<int>("BusinessId")
                        .HasColumnType("int")
                        .HasColumnName("businessID");

                    b.Property<string>("HardwareInfo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("hardwareInfo");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("InstalledBy")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("installedBy")
                        .IsFixedLength();

                    b.Property<DateTime?>("InstalledDate")
                        .HasColumnType("datetime")
                        .HasColumnName("installedDate");

                    b.Property<string>("LightNote")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("lightNote");

                    b.ToTable("tblLight", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblLogNote", b =>
                {
                    b.Property<DateTime?>("AppointmentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("appointmentDate");

                    b.Property<string>("AppointmentType")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("appointmentType")
                        .IsFixedLength();

                    b.Property<int?>("AssignedTo")
                        .HasColumnType("int")
                        .HasColumnName("assignedTo");

                    b.Property<int?>("LogBy")
                        .HasColumnType("int")
                        .HasColumnName("logBy");

                    b.Property<DateTime?>("LogDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("logDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Note")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("note");

                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("noteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NoteId"), 1L, 1);

                    b.Property<string>("Status")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("status")
                        .IsFixedLength();

                    b.Property<int>("TicketId")
                        .HasColumnType("int")
                        .HasColumnName("ticketID");

                    b.ToTable("tblLogNotes", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblMobileDevice", b =>
                {
                    b.Property<string>("Uuid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UUID");

                    b.Property<int>("CustId")
                        .HasColumnType("int")
                        .HasColumnName("CustID");

                    b.Property<DateTime>("LicEnding")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("licEnding")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Uuid")
                        .HasName("PK__tblMobil__65A475E73BFFE745");

                    b.ToTable("tblMobileDevices", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblMobileLicence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("IssuedBy")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("issuedBy");

                    b.Property<DateTime>("LicEnding")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("licEnding")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("LicIssued")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("licIssued")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UUID");

                    b.HasKey("Id");

                    b.ToTable("tblMobileLicence", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblMobileLoginRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Customer")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<DateTime>("RequestDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UUID")
                        .HasDefaultValueSql("('')");

                    b.HasKey("Id");

                    b.ToTable("tblMobileLoginRequest", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblMobileUser", b =>
                {
                    b.Property<string>("UserName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("BusId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("BusID")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("CustId")
                        .HasColumnType("int")
                        .HasColumnName("CustID");

                    b.Property<DateTime>("LicEnding")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("licEnding")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserEmailaddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserPassword")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("UserStatus")
                        .HasColumnType("int")
                        .HasColumnName("userStatus");

                    b.Property<string>("UserStatusKey")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("userStatusKey");

                    b.HasKey("UserName")
                        .HasName("PK__tblMobil__65A475E7214BF109");

                    b.ToTable("tblMobileUsers", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblPayment", b =>
                {
                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("amount");

                    b.Property<decimal?>("Balance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("balance")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("InvoiceNumber")
                        .HasColumnType("int")
                        .HasColumnName("invoiceNumber");

                    b.Property<string>("PaidBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("paidBy")
                        .IsFixedLength();

                    b.Property<DateTime?>("PaidDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("paidDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PayNote")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("payNote");

                    b.Property<string>("ReceivedBy")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("receivedBy")
                        .IsFixedLength();

                    b.ToTable("tblPayment", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productID");

                    b.Property<decimal?>("CostPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("costPrice");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("createdBy")
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("createdDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("departmentID");

                    b.Property<decimal?>("InstallerPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("installerPrice");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("modifiedBy")
                        .IsFixedLength();

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modifiedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ProDescription")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("proDescription");

                    b.Property<string>("ProName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("proName");

                    b.Property<decimal?>("RetailPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("retailPrice");

                    b.Property<int?>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("stock")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("SubDepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("subDepartmentID")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("ProductId")
                        .HasName("PK__tblProdu__2D10D14A1CBC4616");

                    b.ToTable("tblProducts", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblProformaInvoice", b =>
                {
                    b.Property<int>("ProformaInvNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("proformaInvNumber");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProformaInvNumber"), 1L, 1);

                    b.Property<int?>("BusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("businessID")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DueDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dueDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("InvDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("invDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("InvNote")
                        .HasMaxLength(5000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5000)")
                        .HasColumnName("invNote");

                    b.Property<string>("InvStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("invStatus")
                        .HasDefaultValueSql("('DRAFT')")
                        .IsFixedLength();

                    b.Property<string>("InvoiceBy")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("invoiceBy")
                        .IsFixedLength();

                    b.Property<DateTime?>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("lastModified")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("modifiedBy")
                        .IsFixedLength();

                    b.HasKey("ProformaInvNumber")
                        .HasName("PK__tblProfo__4A478E000C50D423");

                    b.ToTable("tblProformaInvoice", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblSalesCallLog", b =>
                {
                    b.Property<string>("HearUs")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("hearUs");

                    b.Property<decimal?>("Maintenance")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("maintenance");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("price");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int")
                        .HasColumnName("ticketID");

                    b.ToTable("tblSalesCallLogs", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblServiceType", b =>
                {
                    b.Property<int>("ServiceTypeId")
                        .HasColumnType("int")
                        .HasColumnName("serviceTypeID");

                    b.Property<string>("ServiceTypeName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("serviceTypeName")
                        .IsFixedLength();

                    b.HasKey("ServiceTypeId", "ServiceTypeName")
                        .HasName("PK_ServiceType");

                    b.ToTable("tblServiceType", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblStockAdjustment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdjustedBy")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("adjustedBy")
                        .IsFixedLength();

                    b.Property<DateTime?>("AdjustedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("adjustedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Adjustment")
                        .HasColumnType("int")
                        .HasColumnName("adjustment");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productID");

                    b.Property<string>("Reason")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("reason");

                    b.HasKey("Id");

                    b.ToTable("tblStockAdjustment", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblSubDepartment", b =>
                {
                    b.Property<int>("SubDepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("subDepartmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubDepartmentId"), 1L, 1);

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("departmentID");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("SubDepDescription")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("subDepDescription");

                    b.Property<string>("SubDepName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("subDepName");

                    b.HasKey("SubDepartmentId")
                        .HasName("PK__tblSubDe__ECB5B4DF30C33EC3");

                    b.ToTable("tblSubDepartment", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblSupport", b =>
                {
                    b.Property<int>("SupportId")
                        .HasColumnType("int")
                        .HasColumnName("supportID");

                    b.Property<string>("SupportName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("supportName")
                        .IsFixedLength();

                    b.HasKey("SupportId", "SupportName")
                        .HasName("PK_Support");

                    b.ToTable("tblSupport", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblTempTicketNoteUpload", b =>
                {
                    b.Property<string>("FileNameGuid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fileName_GUID");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("fileName");

                    b.Property<string>("UserName")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("userName");

                    b.HasKey("FileNameGuid")
                        .HasName("PK__tblTempT__06000B2029E1370A");

                    b.ToTable("tblTempTicketNoteUpload", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblTicketNoteUpload", b =>
                {
                    b.Property<string>("FileNameGuid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fileName_GUID");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("fileName");

                    b.Property<int>("NoteId")
                        .HasColumnType("int")
                        .HasColumnName("noteID");

                    b.HasKey("FileNameGuid")
                        .HasName("PK__tblTicke__06000B202DB1C7EE");

                    b.ToTable("tblTicketNoteUpload", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblTillInfo", b =>
                {
                    b.Property<string>("TillName")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("tillName")
                        .IsFixedLength();

                    b.Property<int>("BusinessId")
                        .HasColumnType("int")
                        .HasColumnName("businessID");

                    b.Property<string>("BarcodeScanner")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("barcodeScanner");

                    b.Property<string>("Computer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("computer")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CustomerDisplay")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("customerDisplay");

                    b.Property<string>("InstalledBy")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("installedBy")
                        .IsFixedLength();

                    b.Property<DateTime?>("InstalledDate")
                        .HasColumnType("datetime")
                        .HasColumnName("installedDate");

                    b.Property<DateTime>("LastUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("lastUpdate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("LicenceExpiryDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("licenceExpiryDate")
                        .HasDefaultValueSql("('2000-1-1')");

                    b.Property<DateTime?>("LicenceIssuedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("licenceIssuedDate")
                        .HasDefaultValueSql("('2000-1-1')");

                    b.Property<string>("LicenceKey")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("licenceKey")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("LogmeinName")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("logmeinName");

                    b.Property<string>("OtherHardwareInfo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("otherHardwareInfo");

                    b.Property<string>("Printer")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("printer");

                    b.Property<DateTime?>("SupportExpiryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("supportExpiryDate");

                    b.Property<int>("SupportId")
                        .HasColumnType("int")
                        .HasColumnName("supportID");

                    b.Property<DateTime?>("SupportRenewedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("supportRenewedDate");

                    b.Property<string>("TillNote")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("tillNote");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("updatedBy")
                        .IsFixedLength();

                    b.Property<string>("Version")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("version")
                        .HasDefaultValueSql("('')");

                    b.HasKey("TillName", "BusinessId")
                        .HasName("PK_Till");

                    b.HasIndex(new[] { "LicenceKey" }, "idxDuplicateLicenceKey")
                        .IsUnique()
                        .HasFilter("([licenceKey]<>'')");

                    b.ToTable("tblTillInfo", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblUnregisteredBusiness", b =>
                {
                    b.Property<int>("UrBusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("urBusinessID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrBusinessId"), 1L, 1);

                    b.Property<bool>("IsRegistered")
                        .HasColumnType("bit")
                        .HasColumnName("isRegistered");

                    b.Property<int?>("PropertyNo")
                        .HasColumnType("int")
                        .HasColumnName("propertyNo");

                    b.Property<int>("UrBusCustomerId")
                        .HasColumnType("int")
                        .HasColumnName("urBusCustomerID");

                    b.Property<string>("UrBusName")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("urBusName");

                    b.Property<string>("UrCusAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("urCusAddress");

                    b.Property<string>("UrCusEmail")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("urCusEmail");

                    b.Property<string>("UrCusGroup")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("urCusGroup")
                        .IsFixedLength();

                    b.Property<string>("UrCusMobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("urCusMobile")
                        .IsFixedLength();

                    b.Property<string>("UrCusName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("urCusName");

                    b.Property<string>("UrCusNote")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("urCusNote");

                    b.Property<string>("UrCusPhone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("urCusPhone")
                        .IsFixedLength();

                    b.Property<string>("UrPostcode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("urPostcode")
                        .IsFixedLength();

                    b.HasKey("UrBusinessId")
                        .HasName("PK__tblUnreg__986C55E421B6055D");

                    b.HasIndex(new[] { "UrCusPhone" }, "idxDuplicateUnregisteredBusinessPhone")
                        .IsUnique()
                        .HasFilter("([urCusPhone]<>'' AND [urCusPhone]<>'0')");

                    b.HasIndex(new[] { "UrPostcode", "PropertyNo" }, "idxDuplicateUnregisteredBusinessPostcodeAndPropertyNo")
                        .IsUnique()
                        .HasFilter("([urPostcode]<>'' AND [propertyNo]<>(0))");

                    b.HasIndex(new[] { "UrCusEmail" }, "idxDuplicateUnregisteredCustomerEmail")
                        .IsUnique()
                        .HasFilter("([urCusEmail]<>'')");

                    b.HasIndex(new[] { "UrCusMobile" }, "idxDuplicateUnregisteredCustomerMobile")
                        .IsUnique()
                        .HasFilter("([urCusMobile]<>'' AND [urCusMobile]<>'0')");

                    b.ToTable("tblUnregisteredBusiness", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("UserName")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("userName")
                        .IsFixedLength();

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name");

                    b.Property<string>("UserGroup")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("userGroup");

                    b.Property<Guid?>("UserGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userGuid");

                    b.Property<string>("UserPassword")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("userPassword");

                    b.HasKey("UserId", "UserName")
                        .HasName("PK__tblUsers__0DF7D34A117F9D94");

                    b.HasIndex(new[] { "Name" }, "idxDuplicateName")
                        .IsUnique()
                        .HasFilter("[name] IS NOT NULL");

                    b.HasIndex(new[] { "UserName" }, "idxDuplicateUserName")
                        .IsUnique();

                    b.ToTable("tblUsers", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblUserLoginHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Attempt")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LoginTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("loginTime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("userName")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("tblUserLoginHistory", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.TblVersionDownloadFailLog", b =>
                {
                    b.Property<int>("BusinessId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessID");

                    b.Property<string>("ExceptionMsg")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime>("FailedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("TillNo")
                        .HasColumnType("int");

                    b.ToTable("tblVersionDownloadFailLog", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.Models.ViSelectAllBusiness", b =>
                {
                    b.Property<string>("BType")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("bType");

                    b.Property<string>("BusAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("busAddress");

                    b.Property<string>("BusName")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("busName");

                    b.Property<string>("BusTelephone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("busTelephone")
                        .IsFixedLength();

                    b.Property<int>("BusinessId")
                        .HasColumnType("int")
                        .HasColumnName("businessID");

                    b.Property<string>("CusMobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("cusMobile")
                        .IsFixedLength();

                    b.Property<string>("CusName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cusName");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerID");

                    b.Property<string>("Postcode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .IsFixedLength();

                    b.ToView("VI_SelectAllBusiness");
                });
#pragma warning restore 612, 618
        }
    }
}
